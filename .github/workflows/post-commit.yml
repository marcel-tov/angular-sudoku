name: NodeJS with Webpack
on: [push]
jobs:
  setup:
    strategy:
      matrix:
        node-version: [18.x]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies
      run: npm install
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Restore node_modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
    - name: lint
      run: npm run lint
  jest:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Restore node_modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
    - name: jest
      run: npm run jest:ci
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: build
        run: npm run build
#      - name: Save build folder
#        uses: actions/upload-artifact@v4
#        with:
#          name: build
#          if-no-files<-found: error
#          path: dist
  cypress:
    runs-on: ubuntu-latest
#    needs: [setup, build]
    needs: setup
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
#      - name: Download the build folder
#        uses: actions/download-artifact@v4
#        with:
#          name: build
#          path: dist
#      - name: cypress:component
#        uses: cypress-io/github-action@v6
#        with:
#          component: true   # runs Cypress in component test mode
#          start: npm run cypress:component
#          browser: chrome
      - name: cypress:e2e
        uses: cypress-io/github-action@v6
        with:
          component: false
          start: |
            npm run cypress:e2e
          browser: chrome
          wait-on: http://localhost:4200
